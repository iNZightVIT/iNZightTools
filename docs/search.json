[{"path":"https://inzightvit.github.io/iNZightTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tom Elliott. Author, maintainer. Daniel Barnett. Author. Yiwen . Author. Zhaoming Su. Author. Lushi Cai. Contributor. Akshay Gupta. Contributor. Owen Jin. Contributor. Christoph Knopf. Contributor.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Elliott T, Barnett D, Y, Su Z (2025). iNZightTools: Tools 'iNZight'. R package version 2.0.1.9000, https://inzightvit.github.io/iNZightTools.","code":"@Manual{,   title = {iNZightTools: Tools for 'iNZight'},   author = {Tom Elliott and Daniel Barnett and Yiwen He and Zhaoming Su},   year = {2025},   note = {R package version 2.0.1.9000},   url = {https://inzightvit.github.io/iNZightTools}, }"},{"path":"https://inzightvit.github.io/iNZightTools/index.html","id":"inzighttools","dir":"","previous_headings":"","what":"Tools for iNZight","title":"Tools for iNZight","text":"Package consisting set helper functions data science iNZight. functions designed work well graphical user interface (GUI), many[1] functional direct use R.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for iNZight","text":"current release version available CRAN: development version can downloaded GitHub:","code":"install.packages(\"iNZightTools\") remotes::install_github(\"iNZightVIT/iNZightTools@dev\")"},{"path":"https://inzightvit.github.io/iNZightTools/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Tools for iNZight","text":"package doesn’t one specific use, functions can broken various workflows. functions return resulting data, attach tidyverse code used generate . useful GUIs display code history (e.g., iNZight) learning code.","code":"library(iNZightTools) #>  #> Attaching package: 'iNZightTools' #> The following object is masked from 'package:stats': #>  #>     filter"},{"path":"https://inzightvit.github.io/iNZightTools/index.html","id":"data-import","dir":"","previous_headings":"Basic usage","what":"Data import","title":"Tools for iNZight","text":"Importing data done using smart_read() function, can read CSV, Excel, Stata, SAS, RData, formats based file extension.","code":"data <- smart_read(system.file(\"extdata/cas500.xls\", package = \"iNZightTools\")) str(data) #> tibble [500 × 10] (S3: tbl_df/tbl/data.frame) #>  $ cellsource: Factor w/ 5 levels \"job\",\"NA\",\"other\",..: 5 4 4 5 5 4 4 5 4 3 ... #>  $ rightfoot : num [1:500] 20 25 21 20 23 19 23 35 22 30 ... #>  $ travel    : Factor w/ 6 levels \"bike\",\"bus\",\"motor\",..: 6 4 3 6 4 3 3 3 3 6 ... #>  $ getlunch  : Factor w/ 7 levels \"dairy\",\"friend\",..: 3 2 3 3 3 3 3 7 3 7 ... #>  $ height    : num [1:500] 152 153 137 115 165 137 164 150 150 123 ... #>  $ gender    : Factor w/ 2 levels \"female\",\"male\": 2 1 2 2 1 1 1 1 1 2 ... #>  $ age       : num [1:500] 12 11 10 9 14 11 12 15 12 14 ... #>  $ year      : num [1:500] 7 6 6 5 10 7 8 11 8 9 ... #>  $ armspan   : num [1:500] 150 152 132 130 160 50 164 100 152 23 ... #>  $ cellcost  : num [1:500] 30 50 55 60 20 50 10 20 10 0 ... #>  - attr(*, \"code\")= chr \"readxl::read_excel(\\\"/home/tom/R/x86_64-pc-linux-gnu-library/4.2/iNZightTools/extdata/cas500.xls\\\") %>% dplyr::\"| __truncated__ #>  - attr(*, \"available.sheets\")= chr \"Census at School-500\" tidy_all_code(code(data)) #> Loading required namespace: styler #>  [1] \"readxl::read_excel(\\\"/home/tom/R/x86_64-pc-linux-gnu-library/4.2/iNZightTools/extdata/cas500.xls\\\") %>%\" #>  [2] \"    dplyr::mutate_at(\"                                                                                   #>  [3] \"        c(\"                                                                                              #>  [4] \"            \\\"cellsource\\\",\"                                                                             #>  [5] \"            \\\"travel\\\",\"                                                                                 #>  [6] \"            \\\"getlunch\\\",\"                                                                               #>  [7] \"            \\\"gender\\\"\"                                                                                  #>  [8] \"        ),\"                                                                                              #>  [9] \"        as.factor\"                                                                                       #> [10] \"    ) %>%\"                                                                                               #> [11] \"    dplyr::mutate_at(\"                                                                                   #> [12] \"        c(\"                                                                                              #> [13] \"            \\\"rightfoot\\\",\"                                                                              #> [14] \"            \\\"height\\\",\"                                                                                 #> [15] \"            \\\"age\\\",\"                                                                                    #> [16] \"            \\\"armspan\\\",\"                                                                                #> [17] \"            \\\"cellcost\\\"\"                                                                                #> [18] \"        ),\"                                                                                              #> [19] \"        as.numeric\"                                                                                      #> [20] \"    )\""},{"path":"https://inzightvit.github.io/iNZightTools/index.html","id":"surveys","dir":"","previous_headings":"Basic usage","what":"Surveys","title":"Tools for iNZight","text":"important tricker data type work , iNZightTools includes methods easily importing surveys using specification format. details, check https://inzight.nz/docs/survey-specification.html","code":""},{"path":"https://inzightvit.github.io/iNZightTools/index.html","id":"other","dir":"","previous_headings":"Basic usage","what":"Other","title":"Tools for iNZight","text":"many data manipulation-focussed functions, filter, renaming variables, etc. others modified time","code":"filter_num(data, \"height\", \"<\", 150) #> # A tibble: 127 × 10 #>    cellsource rightfoot travel getlunch height gender   age  year armspan #>  * <fct>          <dbl> <fct>  <fct>     <dbl> <fct>  <dbl> <dbl>   <dbl> #>  1 parent            21 motor  home        137 male      10     6     132 #>  2 pocket            20 walk   home        115 male       9     5     130 #>  3 parent            19 motor  home        137 female    11     7      50 #>  4 other             30 walk   tuckshop    123 male      14     9      23 #>  5 parent            11 bike   home        129 male      10     5     165 #>  6 other             23 motor  home        145 male      10     6     144 #>  7 parent            19 motor  home        146 female     9     4     140 #>  8 pocket            22 bus    home        146 female    12     8     136 #>  9 job               19 motor  home        130 female     9     6     130 #> 10 parent            21 motor  home        135 female    11     6     137 #> # ℹ 117 more rows #> # ℹ 1 more variable: cellcost <dbl>"},{"path":"https://inzightvit.github.io/iNZightTools/reference/add_suffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Add suffix to string — add_suffix","title":"Add suffix to string — add_suffix","text":"creating new variables modifying data set, often add suffix added distinguish new name original one. However, action performed twice (example, filtering data set), suffix duplicated (data.filtered.filtered). function averts adding suffix exist, otherwise appending counter (data.filtered2).","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/add_suffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add suffix to string — add_suffix","text":"","code":"add_suffix(name, suffix)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/add_suffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add suffix to string — add_suffix","text":"name character vector containing (original) names suffix suffix add, length-one character vector","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/add_suffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add suffix to string — add_suffix","text":"character vector names suffix appended","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/add_suffix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add suffix to string — add_suffix","text":"","code":"add_suffix(\"data\", \"filtered\") #> [1] \"data.filtered\" add_suffix(c(\"data.filtered\", \"data.filtered.reshaped\"), \"filtered\") #> [1] \"data.filtered2\"          \"data.filtered2.reshaped\""},{"path":"https://inzightvit.github.io/iNZightTools/reference/aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data by categorical variables — aggregate_data","title":"Aggregate data by categorical variables — aggregate_data","text":"Summarizes non-categorical variables dataframe grouping based specified categorical variables returns aggregated result along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data by categorical variables — aggregate_data","text":"","code":"aggregate_data(   data,   group_vars,   summaries,   vars = NULL,   names = NULL,   quantiles = c(0.25, 0.75) )  aggregate_dt(   data,   dt,   dt_comp,   group_vars = NULL,   summaries,   vars = NULL,   names = NULL,   quantiles = c(0.25, 0.75) )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate data by categorical variables — aggregate_data","text":"data dataframe survey design object aggregated. group_vars character vector specifying variables data ' used grouping factors. summaries unnamed character vector named list summary functions calculate group. unnamed, vector elements names variables dataset summary statistics need calculated. named, names correspond summary functions (e.g., \"mean\", \"sd\", \"iqr\") applied variable. vars (Optional) character vector specifying names variables dataset summary statistics need calculated. argument ignored summaries named list. names (Optional) character vector named list providing name templates newly created variables. See details information. quantiles (Optional) numeric vector specifying desired quantiles (e.g., c(0.25, 0.5, 0.75)). See details information. dt character string representing name date-time variable dataset. dt_comp character string specifying component date-time use grouping.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/aggregate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate data by categorical variables — aggregate_data","text":"aggregated dataframe containing summary statistics group, along tidyverse code used aggregation.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/aggregate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate data by categorical variables — aggregate_data","text":"aggregate_data() function accepts R function returns single-value summary (e.g., mean, var, sd, sum, IQR). default, new variables named {var}_{fun}, {var} variable name {fun} summary function used. user can provide custom names using names argument, either vector length vars, named list names correspond summary functions (e.g., \"mean\" \"sd\"). special summary \"missing\" can included, counts number missing values variable. default name summary {var}_missing. quantiles requested, function calculates specified quantiles (e.g., 25th, 50th, 75th percentiles), creating new variables quantile. customize names variables, use {p} placeholder names argument, {p} represents quantile value. example, using names = \"Q{p}_{var}\" create variables like \"Q0.25_Sepal.Length\" 25th percentile.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/aggregate_data.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Aggregate data by categorical variables — aggregate_data","text":"aggregate_dt(): Aggregate data dates times","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/aggregate_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregate data by categorical variables — aggregate_data","text":"Tom Elliott, Owen Jin, Zhaoming Su Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/aggregate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate data by categorical variables — aggregate_data","text":"","code":"aggregated <-     aggregate_data(iris,         group_vars = c(\"Species\"),         summaries = c(\"mean\", \"sd\", \"iqr\")     ) code(aggregated) #> iris |> #>     dplyr::group_by(Species) |> #>     dplyr::summarise( #>         Sepal.Length_mean = mean(Sepal.Length, #>             na.rm = TRUE #>         ), #>         Sepal.Width_mean = mean(Sepal.Width, #>             na.rm = TRUE #>         ), #>         Petal.Length_mean = mean(Petal.Length, #>             na.rm = TRUE #>         ), #>         Petal.Width_mean = mean(Petal.Width, #>             na.rm = TRUE #>         ), #>         Sepal.Length_sd = sd(Sepal.Length, #>             na.rm = TRUE #>         ), #>         Sepal.Width_sd = sd(Sepal.Width, #>             na.rm = TRUE #>         ), #>         Petal.Length_sd = sd(Petal.Length, #>             na.rm = TRUE #>         ), #>         Petal.Width_sd = sd(Petal.Width, #>             na.rm = TRUE #>         ), #>         Sepal.Length_iqr = IQR(Sepal.Length, #>             na.rm = TRUE #>         ), #>         Sepal.Width_iqr = IQR(Sepal.Width, #>             na.rm = TRUE #>         ), #>         Petal.Length_iqr = IQR(Petal.Length, #>             na.rm = TRUE #>         ), #>         Petal.Width_iqr = IQR(Petal.Width, #>             na.rm = TRUE #>         ), #>         .groups = \"drop\" #>     ) #>  head(aggregated) #> # A tibble: 3 × 13 #>   Species  Sepal.Length_mean Sepal.Width_mean Petal.Length_mean Petal.Width_mean #>   <fct>                <dbl>            <dbl>             <dbl>            <dbl> #> 1 setosa                5.01             3.43              1.46            0.246 #> 2 versico…              5.94             2.77              4.26            1.33  #> 3 virgini…              6.59             2.97              5.55            2.03  #> # ℹ 8 more variables: Sepal.Length_sd <dbl>, Sepal.Width_sd <dbl>, #> #   Petal.Length_sd <dbl>, Petal.Width_sd <dbl>, Sepal.Length_iqr <dbl>, #> #   Sepal.Width_iqr <dbl>, Petal.Length_iqr <dbl>, Petal.Width_iqr <dbl>"},{"path":"https://inzightvit.github.io/iNZightTools/reference/append_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Append rows to a dataset — append_rows","title":"Append rows to a dataset — append_rows","text":"Append rows dataset","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/append_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append rows to a dataset — append_rows","text":"","code":"append_rows(data, new_data, when_added = FALSE)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/append_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append rows to a dataset — append_rows","text":"data original dataset new rows appended. new_data dataset containing new rows. when_added Logical; indicates whether .when_added column required.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/append_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append rows to a dataset — append_rows","text":"dataset new rows appended original data.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/append_rows.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Append rows to a dataset — append_rows","text":"Yiwen , Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/as_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"as_tibble — as_tibble","title":"as_tibble — as_tibble","text":"as_tibble Convert dictionary object 'tibble'","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/as_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as_tibble — as_tibble","text":"","code":"# S3 method for class 'dictionary' as_tibble(   x,   n = length(x),   include_other = TRUE,   code_sep = ifelse(interactive(), \"|\", \"\\n\"),   ... )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/as_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as_tibble — as_tibble","text":"x `dictionary` object. n Numeric, number rows convert. include_other `TRUE`, variables included tibble. code_sep separator used codes values.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/code.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data's Code — code","title":"Get Data's Code — code","text":"Used grab code data.frame generated package.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data's Code — code","text":"","code":"code(data)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data's Code — code","text":"data dataset want extract code ","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data's Code — code","text":"code used generate data.frame, available (else NULL)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Data's Code — code","text":"simply helper function grab contents `code` attribute contained data object.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/code.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Data's Code — code","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/collapse_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse data by values of a categorical variable — collapse_cat","title":"Collapse data by values of a categorical variable — collapse_cat","text":"Collapse values categorical variable one defined level","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/collapse_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse data by values of a categorical variable — collapse_cat","text":"","code":"collapse_cat(data, var, levels, new_level, name = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/collapse_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse data by values of a categorical variable — collapse_cat","text":"data dataframe collapse var string name categorical variable collapse levels character vector levels collapsed new_level string new level name name new variable","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/collapse_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse data by values of a categorical variable — collapse_cat","text":"original dataframe containing new column         collapsed variable tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/collapse_cat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Collapse data by values of a categorical variable — collapse_cat","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/collapse_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse data by values of a categorical variable — collapse_cat","text":"","code":"collapsed <- collapse_cat(iris,     var = \"Species\",     c(\"versicolor\", \"virginica\"),     new_level = \"V\" ) cat(code(collapsed)) #> iris |> dplyr::mutate(Species.coll = forcats::fct_collapse(Species, V = c(   \"versicolor\", \"virginica\")), .after = Species) tail(collapsed) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species Species.coll #> 145          6.7         3.3          5.7         2.5 virginica            V #> 146          6.7         3.0          5.2         2.3 virginica            V #> 147          6.3         2.5          5.0         1.9 virginica            V #> 148          6.5         3.0          5.2         2.0 virginica            V #> 149          6.2         3.4          5.4         2.3 virginica            V #> 150          5.9         3.0          5.1         1.8 virginica            V"},{"path":"https://inzightvit.github.io/iNZightTools/reference/combine_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine variables into one categorical variable — combine_vars","title":"Combine variables into one categorical variable — combine_vars","text":"Combine chosen variables class concatenating one factor variable, returns result along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/combine_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine variables into one categorical variable — combine_vars","text":"","code":"combine_vars(   data,   vars,   sep = \":\",   name = NULL,   keep_empty = FALSE,   keep_na = TRUE )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/combine_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine variables into one categorical variable — combine_vars","text":"data dataframe columns combined vars character vector variables combined sep character string separate levels name name new variable keep_empty logical, FALSE empty level combinations removed factor keep_na logical, TRUE <NA> factors NA characters turn level \"(Missing)\"; otherwise, resulting entries return <NA>","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/combine_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine variables into one categorical variable — combine_vars","text":"original dataframe containing new columns new         categorical variable tidyverse code attached","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/combine_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine variables into one categorical variable — combine_vars","text":"Owen Jin, Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/combine_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine variables into one categorical variable — combine_vars","text":"","code":"combined <- combine_vars(warpbreaks, vars = c(\"wool\", \"tension\"), sep = \"_\") cat(code(combined)) #> warpbreaks |> dplyr::mutate(wool_tension = forcats::fct_cross(forcats::fct_na_value_to_level(   wool, \"(Missing)\"), forcats::fct_na_value_to_level(tension, \"(Missing)\"), sep = \"_\", keep_empty = FALSE)) head(combined) #>   breaks wool tension wool_tension #> 1     26    A       L          A_L #> 2     30    A       L          A_L #> 3     54    A       L          A_L #> 4     25    A       L          A_L #> 5     70    A       L          A_L #> 6     52    A       L          A_L"},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert variables to categorical variables — convert_to_cat","title":"Convert variables to categorical variables — convert_to_cat","text":"Convert specified variables factors","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert variables to categorical variables — convert_to_cat","text":"","code":"convert_to_cat(data, vars, names = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert variables to categorical variables — convert_to_cat","text":"data dataframe categorical column convert vars character vector column names convert names character vector names created variables","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert variables to categorical variables — convert_to_cat","text":"original dataframe containing new columns         converted variables tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_cat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert variables to categorical variables — convert_to_cat","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert variables to categorical variables — convert_to_cat","text":"","code":"converted <- convert_to_cat(iris, vars = c(\"Petal.Width\")) cat(code(converted)) #> iris |> dplyr::mutate(Petal.Width.cat = as.factor(Petal.Width), .after = Petal.Width) head(converted) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Petal.Width.cat Species #> 1          5.1         3.5          1.4         0.2             0.2  setosa #> 2          4.9         3.0          1.4         0.2             0.2  setosa #> 3          4.7         3.2          1.3         0.2             0.2  setosa #> 4          4.6         3.1          1.5         0.2             0.2  setosa #> 5          5.0         3.6          1.4         0.2             0.2  setosa #> 6          5.4         3.9          1.7         0.4             0.4  setosa"},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert variables to dates — convert_to_date","title":"Convert variables to dates — convert_to_date","text":"Convert variables dates","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert variables to dates — convert_to_date","text":"","code":"convert_to_date(data, vars, ord = NULL, names = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert variables to dates — convert_to_date","text":"data dataframe variables convert vars character vector column names convert ord character vector date-time formats names character vector names created variables","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert variables to dates — convert_to_date","text":"original dataframe containing new columns         converted variables tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert variables to dates — convert_to_date","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert variables to date-time — convert_to_datetime","title":"Convert variables to date-time — convert_to_datetime","text":"Convert variables date-time","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert variables to date-time — convert_to_datetime","text":"","code":"convert_to_datetime(data, vars, ord = NULL, names = NULL, tz = \"\")"},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert variables to date-time — convert_to_datetime","text":"data dataframe variables convert vars character vector column names convert ord character vector date-time formats names character vector names created variables tz time zone name (default: local time zone). See OlsonNames","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert variables to date-time — convert_to_datetime","text":"original dataframe containing new columns         converted variables tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/convert_to_datetime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert variables to date-time — convert_to_datetime","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_varname.html","id":null,"dir":"Reference","previous_headings":"","what":"Create variable name — create_varname","title":"Create variable name — create_varname","text":"Convert given string valid R variable name, converting spaces underscores (_) instead dots.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_varname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create variable name — create_varname","text":"","code":"create_varname(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_varname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create variable name — create_varname","text":"x string convert","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_varname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create variable name — create_varname","text":"string, also valid variable name","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_varname.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create variable name — create_varname","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_varname.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create variable name — create_varname","text":"","code":"create_varname(\"a new variable\") #> [1] \"a_new_variable\" create_varname(\"8d4-2q5\") #> [1] \"X8d4.2q5\""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new variables — create_vars","title":"Create new variables — create_vars","text":"Create new variables using valid R expressions returns result along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new variables — create_vars","text":"","code":"create_vars(data, vars = \".new_var\", vars_expr = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new variables — create_vars","text":"data dataframe add new variables vars character new variable names vars_expr character valid R expressions can generate vectors values","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new variables — create_vars","text":"original dataframe containing new columns         created vars_expr tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create new variables — create_vars","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/create_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new variables — create_vars","text":"","code":"created <- create_vars(     data = iris,     vars = \"Sepal.Length_less_Sepal.Width\",     \"Sepal.Length - Sepal.Width\" ) cat(code(created)) #> iris |> dplyr::mutate(Sepal.Length_less_Sepal.Width = Sepal.Length -   Sepal.Width) head(created) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa #> 4          4.6         3.1          1.5         0.2  setosa #> 5          5.0         3.6          1.4         0.2  setosa #> 6          5.4         3.9          1.7         0.4  setosa #>   Sepal.Length_less_Sepal.Width #> 1                           1.6 #> 2                           1.9 #> 3                           1.5 #> 4                           1.5 #> 5                           1.4 #> 6                           1.5"},{"path":"https://inzightvit.github.io/iNZightTools/reference/delete_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete variables — delete_vars","title":"Delete variables — delete_vars","text":"Delete variables dataset","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/delete_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete variables — delete_vars","text":"","code":"delete_vars(data, vars = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/delete_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete variables — delete_vars","text":"data dataset vars variable names delete","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/delete_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete variables — delete_vars","text":"dataset without chosen variables","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/delete_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delete variables — delete_vars","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionaries — read_dictionary","title":"Data Dictionaries — read_dictionary","text":"function reads data dictionary file attaches dataset. attached data dictionary provides utility functions can used methods, plots, automatically create axes .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionaries — read_dictionary","text":"","code":"read_dictionary(   file,   name = \"name\",   type = \"type\",   title = \"title\",   description = \"description\",   units = \"units\",   codes = \"codes\",   values = \"values\",   level_separator = \"|\",   ... )  # S3 method for class 'dictionary' print(x, kable = FALSE, include_other = TRUE, ...)  # S3 method for class 'dictionary' x[i, ...]  apply_dictionary(data, dict)  has_dictionary(data)  get_dictionary(data)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Dictionaries — read_dictionary","text":"file path file containing data dictionary. name name column containing variable name. type name column containing variable type. title name column containing short, human-readable title variable. blank, variable name used instead. description name column containing variable description. units name column containing units (numeric variables ). codes name column containing factor codes (categorical variables ). values name column containing factor values corresponding codes. order codes. level_separator separator used separate levels codes values columns. default separator \"|\". Alternatively, can provide vector length 2, first element used codes second element values. ... Additional arguments, passed smart_read. x dictionary object. kable TRUE, output formatted using kable. include_other TRUE, additional variables included output. Subset index. data dataset (dataframe, tibble). dict dictionary (created using read_dictionary()).","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Dictionaries — read_dictionary","text":"dataset attached data dictionary.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_dt_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract date component from a date-time variable — extract_dt_comp","title":"Extract date component from a date-time variable — extract_dt_comp","text":"function extracts specific date component date-time variable dataframe.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_dt_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract date component from a date-time variable — extract_dt_comp","text":"","code":"extract_dt_comp(data, var, comp, name = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_dt_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract date component from a date-time variable — extract_dt_comp","text":"data dataframe containing date-time variable. var name date-time variable extract component. comp date component wanted variable. See iNZightTools:::inz_dt_comp full list components. name name new column store extracted date component.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_dt_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract date component from a date-time variable — extract_dt_comp","text":"dataframe new date component column.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_dt_comp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract date component from a date-time variable — extract_dt_comp","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_part.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract part of a datetimes variable (DEPRECATED) — extract_part","title":"Extract part of a datetimes variable (DEPRECATED) — extract_part","text":"function replaced `extract_dt_comp` removed next release.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_part.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract part of a datetimes variable (DEPRECATED) — extract_part","text":"","code":"extract_part(.data, varname, part, name)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_part.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract part of a datetimes variable (DEPRECATED) — extract_part","text":".data dataframe varname name variable part part variable wanted name name new column","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/extract_part.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract part of a datetimes variable (DEPRECATED) — extract_part","text":"see `extract_dt_comp`","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter — filter","title":"Filter — filter","text":"Filter Filter inzdf","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter — filter","text":"","code":"# S3 method for class 'inzdf_db' filter(.data, ..., table = NULL, .preserve = FALSE)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter — filter","text":".data data frame, data frame extension (e.g. tibble), lazy data frame (e.g. dbplyr dtplyr). See Methods, , details. ... <data-masking> Expressions return logical value, defined terms variables .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. table name table use, defaults first list .preserve ignored","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data by levels of categorical variables — filter_cat","title":"Filter data by levels of categorical variables — filter_cat","text":"function filters dataframe survey design object keeping rows specified categorical variable matches one given levels. resulting filtered dataframe returned, along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data by levels of categorical variables — filter_cat","text":"","code":"filter_cat(data, var, levels)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data by levels of categorical variables — filter_cat","text":"data dataframe survey design object filtered. var name column data filtered . levels character vector levels var keep.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data by levels of categorical variables — filter_cat","text":"filtered dataframe tidyverse code attached.","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_cat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter data by levels of categorical variables — filter_cat","text":"Owen Jin, Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter data by levels of categorical variables — filter_cat","text":"","code":"filtered <- filter_cat(iris,     var = \"Species\",     levels = c(\"versicolor\", \"virginica\") ) cat(code(filtered)) #> iris |> dplyr::filter(Species %in% c(\"versicolor\", \"virginica\")) head(filtered) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1          7.0         3.2          4.7         1.4 versicolor #> 2          6.4         3.2          4.5         1.5 versicolor #> 3          6.9         3.1          4.9         1.5 versicolor #> 4          5.5         2.3          4.0         1.3 versicolor #> 5          6.5         2.8          4.6         1.5 versicolor #> 6          5.7         2.8          4.5         1.3 versicolor"},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter data by levels of numeric variables — filter_num","title":"Filter data by levels of numeric variables — filter_num","text":"function filters dataframe survey design object applying specified boolean condition one numeric variables. resulting filtered dataframe returned, along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter data by levels of numeric variables — filter_num","text":"","code":"filter_num(data, var, op = c(\"<=\", \"<\", \">=\", \">\", \"==\", \"!=\"), num)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter data by levels of numeric variables — filter_num","text":"data dataframe survey design object filtered. var name column data filtered . op logical operator apply filtering condition. Valid options : \"<=\", \"<\", \">=\", \">\", \"==\", \"!=\". num numeric value specified op applied.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter data by levels of numeric variables — filter_num","text":"filtered dataframe tidyverse code attached.","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_num.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter data by levels of numeric variables — filter_num","text":"Owen Jin, Tom Elliott, Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/filter_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter data by levels of numeric variables — filter_num","text":"","code":"filtered <- filter_num(iris, var = \"Sepal.Length\", op = \"<=\", num = 5) cat(code(filtered)) #> iris |> dplyr::filter(Sepal.Length <= 5) head(filtered) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          4.9         3.0          1.4         0.2  setosa #> 2          4.7         3.2          1.3         0.2  setosa #> 3          4.6         3.1          1.5         0.2  setosa #> 4          5.0         3.6          1.4         0.2  setosa #> 5          4.6         3.4          1.4         0.3  setosa #> 6          5.0         3.4          1.5         0.2  setosa  library(survey) #> Loading required package: grid #> Loading required package: Matrix #> Loading required package: survival #>  #> Attaching package: ‘survey’ #> The following object is masked from ‘package:graphics’: #>  #>     dotchart data(api) svy <- svydesign(~ dnum + snum,     weights = ~pw, fpc = ~ fpc1 + fpc2,     data = apiclus2 ) svy_filtered <- filter_num(svy, var = \"api00\", op = \"<\", num = 700) cat(code(svy_filtered)) #> svy |> srvyr::as_survey() |> srvyr::filter(api00 < 700)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a survey design — fitDesign","title":"Fit a survey design — fitDesign","text":"Fit survey design object","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a survey design — fitDesign","text":"","code":"fitDesign(svydes, dataset.name)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a survey design — fitDesign","text":"svydes design dataset.name dataset name","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a survey design — fitDesign","text":"survey object","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitDesign.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a survey design — fitDesign","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit models — fitModel","title":"Fit models — fitModel","text":"Wrapper function `lm`, `glm`, `svyglm`.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit models — fitModel","text":"","code":"fitModel(   y,   x,   data,   family = \"gaussian\",   link = switch(family, gaussian = \"gaussian\", binomial = \"logit\", poisson = \"log\",     negbin = \"log\"),   design = \"simple\",   svydes = NA,   surv_params = NULL,   ... )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit models — fitModel","text":"y character string representing response, x character string explanatory variables, data name object containing data. family gaussian, binomial, poisson (far, others added) link link function use design data design specification. one 'simple', 'survey' 'experiment' svydes vector arguments passed svydesign function, excluding data (defined ) surv_params vector containing arguments survival::Surv() ... arguments passed lm, glm, svyglm, offset, etc.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit models — fitModel","text":"model call formula (using lm, glm, svyglm)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/fitModel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit models — fitModel","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/form_class_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Form Class Intervals — form_class_intervals","title":"Form Class Intervals — form_class_intervals","text":"function creates categorical intervals numeric variable given dataset.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/form_class_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Form Class Intervals — form_class_intervals","text":"","code":"form_class_intervals(   data,   variable,   method = c(\"equal\", \"width\", \"count\", \"manual\"),   n_intervals = 4L,   interval_width,   format = \"(a,b]\",   range = NULL,   format_lowest = ifelse(isinteger, \"< a\", \"<= a\"),   format_highest = \"> b\",   break_points = NULL,   name = sprintf(\"%s.f\", variable) )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/form_class_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Form Class Intervals — form_class_intervals","text":"data dataset survey object. variable name numeric variable convert intervals. method method used create intervals: 'equal' equal-width intervals, 'width' intervals specific width, 'count' equal-count intervals, 'manual' specify break points manually. n_intervals methods 'equal' 'count', specifies number intervals create. interval_width method 'width', sets width intervals. format format interval labels; use '' 'b' represent min/max interval, respectively. range range data; use adjust labels (e.g., continuous data, set floor/ceiling min/max data get prettier intervals). range cover range data, values outside placed 'less ' 'greater b' categories. format_lowest Label format values lower min range. format_highest Label format values higher max range. break_points method 'manual', specify breakpoints numeric vector. name name new variable resulting data set.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/form_class_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Form Class Intervals — form_class_intervals","text":"dataframe additional column containing categorical class intervals.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/form_class_intervals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Form Class Intervals — form_class_intervals","text":"Tom Elliott, Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/form_class_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Form Class Intervals — form_class_intervals","text":"","code":"form_class_intervals(iris, \"Sepal.Length\", \"equal\", 5L) #>     Sepal.Length Sepal.Length.f Sepal.Width Petal.Length Petal.Width    Species #> 1            5.1      (4.8,5.6]         3.5          1.4         0.2     setosa #> 2            4.9      (4.8,5.6]         3.0          1.4         0.2     setosa #> 3            4.7        [4,4.8]         3.2          1.3         0.2     setosa #> 4            4.6        [4,4.8]         3.1          1.5         0.2     setosa #> 5            5.0      (4.8,5.6]         3.6          1.4         0.2     setosa #> 6            5.4      (4.8,5.6]         3.9          1.7         0.4     setosa #> 7            4.6        [4,4.8]         3.4          1.4         0.3     setosa #> 8            5.0      (4.8,5.6]         3.4          1.5         0.2     setosa #> 9            4.4        [4,4.8]         2.9          1.4         0.2     setosa #> 10           4.9      (4.8,5.6]         3.1          1.5         0.1     setosa #> 11           5.4      (4.8,5.6]         3.7          1.5         0.2     setosa #> 12           4.8        [4,4.8]         3.4          1.6         0.2     setosa #> 13           4.8        [4,4.8]         3.0          1.4         0.1     setosa #> 14           4.3        [4,4.8]         3.0          1.1         0.1     setosa #> 15           5.8      (5.6,6.4]         4.0          1.2         0.2     setosa #> 16           5.7      (5.6,6.4]         4.4          1.5         0.4     setosa #> 17           5.4      (4.8,5.6]         3.9          1.3         0.4     setosa #> 18           5.1      (4.8,5.6]         3.5          1.4         0.3     setosa #> 19           5.7      (5.6,6.4]         3.8          1.7         0.3     setosa #> 20           5.1      (4.8,5.6]         3.8          1.5         0.3     setosa #> 21           5.4      (4.8,5.6]         3.4          1.7         0.2     setosa #> 22           5.1      (4.8,5.6]         3.7          1.5         0.4     setosa #> 23           4.6        [4,4.8]         3.6          1.0         0.2     setosa #> 24           5.1      (4.8,5.6]         3.3          1.7         0.5     setosa #> 25           4.8        [4,4.8]         3.4          1.9         0.2     setosa #> 26           5.0      (4.8,5.6]         3.0          1.6         0.2     setosa #> 27           5.0      (4.8,5.6]         3.4          1.6         0.4     setosa #> 28           5.2      (4.8,5.6]         3.5          1.5         0.2     setosa #> 29           5.2      (4.8,5.6]         3.4          1.4         0.2     setosa #> 30           4.7        [4,4.8]         3.2          1.6         0.2     setosa #> 31           4.8        [4,4.8]         3.1          1.6         0.2     setosa #> 32           5.4      (4.8,5.6]         3.4          1.5         0.4     setosa #> 33           5.2      (4.8,5.6]         4.1          1.5         0.1     setosa #> 34           5.5      (4.8,5.6]         4.2          1.4         0.2     setosa #> 35           4.9      (4.8,5.6]         3.1          1.5         0.2     setosa #> 36           5.0      (4.8,5.6]         3.2          1.2         0.2     setosa #> 37           5.5      (4.8,5.6]         3.5          1.3         0.2     setosa #> 38           4.9      (4.8,5.6]         3.6          1.4         0.1     setosa #> 39           4.4        [4,4.8]         3.0          1.3         0.2     setosa #> 40           5.1      (4.8,5.6]         3.4          1.5         0.2     setosa #> 41           5.0      (4.8,5.6]         3.5          1.3         0.3     setosa #> 42           4.5        [4,4.8]         2.3          1.3         0.3     setosa #> 43           4.4        [4,4.8]         3.2          1.3         0.2     setosa #> 44           5.0      (4.8,5.6]         3.5          1.6         0.6     setosa #> 45           5.1      (4.8,5.6]         3.8          1.9         0.4     setosa #> 46           4.8        [4,4.8]         3.0          1.4         0.3     setosa #> 47           5.1      (4.8,5.6]         3.8          1.6         0.2     setosa #> 48           4.6        [4,4.8]         3.2          1.4         0.2     setosa #> 49           5.3      (4.8,5.6]         3.7          1.5         0.2     setosa #> 50           5.0      (4.8,5.6]         3.3          1.4         0.2     setosa #> 51           7.0      (6.4,7.2]         3.2          4.7         1.4 versicolor #> 52           6.4      (5.6,6.4]         3.2          4.5         1.5 versicolor #> 53           6.9      (6.4,7.2]         3.1          4.9         1.5 versicolor #> 54           5.5      (4.8,5.6]         2.3          4.0         1.3 versicolor #> 55           6.5      (6.4,7.2]         2.8          4.6         1.5 versicolor #> 56           5.7      (5.6,6.4]         2.8          4.5         1.3 versicolor #> 57           6.3      (5.6,6.4]         3.3          4.7         1.6 versicolor #> 58           4.9      (4.8,5.6]         2.4          3.3         1.0 versicolor #> 59           6.6      (6.4,7.2]         2.9          4.6         1.3 versicolor #> 60           5.2      (4.8,5.6]         2.7          3.9         1.4 versicolor #> 61           5.0      (4.8,5.6]         2.0          3.5         1.0 versicolor #> 62           5.9      (5.6,6.4]         3.0          4.2         1.5 versicolor #> 63           6.0      (5.6,6.4]         2.2          4.0         1.0 versicolor #> 64           6.1      (5.6,6.4]         2.9          4.7         1.4 versicolor #> 65           5.6      (4.8,5.6]         2.9          3.6         1.3 versicolor #> 66           6.7      (6.4,7.2]         3.1          4.4         1.4 versicolor #> 67           5.6      (4.8,5.6]         3.0          4.5         1.5 versicolor #> 68           5.8      (5.6,6.4]         2.7          4.1         1.0 versicolor #> 69           6.2      (5.6,6.4]         2.2          4.5         1.5 versicolor #> 70           5.6      (4.8,5.6]         2.5          3.9         1.1 versicolor #> 71           5.9      (5.6,6.4]         3.2          4.8         1.8 versicolor #> 72           6.1      (5.6,6.4]         2.8          4.0         1.3 versicolor #> 73           6.3      (5.6,6.4]         2.5          4.9         1.5 versicolor #> 74           6.1      (5.6,6.4]         2.8          4.7         1.2 versicolor #> 75           6.4      (5.6,6.4]         2.9          4.3         1.3 versicolor #> 76           6.6      (6.4,7.2]         3.0          4.4         1.4 versicolor #> 77           6.8      (6.4,7.2]         2.8          4.8         1.4 versicolor #> 78           6.7      (6.4,7.2]         3.0          5.0         1.7 versicolor #> 79           6.0      (5.6,6.4]         2.9          4.5         1.5 versicolor #> 80           5.7      (5.6,6.4]         2.6          3.5         1.0 versicolor #> 81           5.5      (4.8,5.6]         2.4          3.8         1.1 versicolor #> 82           5.5      (4.8,5.6]         2.4          3.7         1.0 versicolor #> 83           5.8      (5.6,6.4]         2.7          3.9         1.2 versicolor #> 84           6.0      (5.6,6.4]         2.7          5.1         1.6 versicolor #> 85           5.4      (4.8,5.6]         3.0          4.5         1.5 versicolor #> 86           6.0      (5.6,6.4]         3.4          4.5         1.6 versicolor #> 87           6.7      (6.4,7.2]         3.1          4.7         1.5 versicolor #> 88           6.3      (5.6,6.4]         2.3          4.4         1.3 versicolor #> 89           5.6      (4.8,5.6]         3.0          4.1         1.3 versicolor #> 90           5.5      (4.8,5.6]         2.5          4.0         1.3 versicolor #> 91           5.5      (4.8,5.6]         2.6          4.4         1.2 versicolor #> 92           6.1      (5.6,6.4]         3.0          4.6         1.4 versicolor #> 93           5.8      (5.6,6.4]         2.6          4.0         1.2 versicolor #> 94           5.0      (4.8,5.6]         2.3          3.3         1.0 versicolor #> 95           5.6      (4.8,5.6]         2.7          4.2         1.3 versicolor #> 96           5.7      (5.6,6.4]         3.0          4.2         1.2 versicolor #> 97           5.7      (5.6,6.4]         2.9          4.2         1.3 versicolor #> 98           6.2      (5.6,6.4]         2.9          4.3         1.3 versicolor #> 99           5.1      (4.8,5.6]         2.5          3.0         1.1 versicolor #> 100          5.7      (5.6,6.4]         2.8          4.1         1.3 versicolor #> 101          6.3      (5.6,6.4]         3.3          6.0         2.5  virginica #> 102          5.8      (5.6,6.4]         2.7          5.1         1.9  virginica #> 103          7.1      (6.4,7.2]         3.0          5.9         2.1  virginica #> 104          6.3      (5.6,6.4]         2.9          5.6         1.8  virginica #> 105          6.5      (6.4,7.2]         3.0          5.8         2.2  virginica #> 106          7.6        (7.2,8]         3.0          6.6         2.1  virginica #> 107          4.9      (4.8,5.6]         2.5          4.5         1.7  virginica #> 108          7.3        (7.2,8]         2.9          6.3         1.8  virginica #> 109          6.7      (6.4,7.2]         2.5          5.8         1.8  virginica #> 110          7.2      (6.4,7.2]         3.6          6.1         2.5  virginica #> 111          6.5      (6.4,7.2]         3.2          5.1         2.0  virginica #> 112          6.4      (5.6,6.4]         2.7          5.3         1.9  virginica #> 113          6.8      (6.4,7.2]         3.0          5.5         2.1  virginica #> 114          5.7      (5.6,6.4]         2.5          5.0         2.0  virginica #> 115          5.8      (5.6,6.4]         2.8          5.1         2.4  virginica #> 116          6.4      (5.6,6.4]         3.2          5.3         2.3  virginica #> 117          6.5      (6.4,7.2]         3.0          5.5         1.8  virginica #> 118          7.7        (7.2,8]         3.8          6.7         2.2  virginica #> 119          7.7        (7.2,8]         2.6          6.9         2.3  virginica #> 120          6.0      (5.6,6.4]         2.2          5.0         1.5  virginica #> 121          6.9      (6.4,7.2]         3.2          5.7         2.3  virginica #> 122          5.6      (4.8,5.6]         2.8          4.9         2.0  virginica #> 123          7.7        (7.2,8]         2.8          6.7         2.0  virginica #> 124          6.3      (5.6,6.4]         2.7          4.9         1.8  virginica #> 125          6.7      (6.4,7.2]         3.3          5.7         2.1  virginica #> 126          7.2      (6.4,7.2]         3.2          6.0         1.8  virginica #> 127          6.2      (5.6,6.4]         2.8          4.8         1.8  virginica #> 128          6.1      (5.6,6.4]         3.0          4.9         1.8  virginica #> 129          6.4      (5.6,6.4]         2.8          5.6         2.1  virginica #> 130          7.2      (6.4,7.2]         3.0          5.8         1.6  virginica #> 131          7.4        (7.2,8]         2.8          6.1         1.9  virginica #> 132          7.9        (7.2,8]         3.8          6.4         2.0  virginica #> 133          6.4      (5.6,6.4]         2.8          5.6         2.2  virginica #> 134          6.3      (5.6,6.4]         2.8          5.1         1.5  virginica #> 135          6.1      (5.6,6.4]         2.6          5.6         1.4  virginica #> 136          7.7        (7.2,8]         3.0          6.1         2.3  virginica #> 137          6.3      (5.6,6.4]         3.4          5.6         2.4  virginica #> 138          6.4      (5.6,6.4]         3.1          5.5         1.8  virginica #> 139          6.0      (5.6,6.4]         3.0          4.8         1.8  virginica #> 140          6.9      (6.4,7.2]         3.1          5.4         2.1  virginica #> 141          6.7      (6.4,7.2]         3.1          5.6         2.4  virginica #> 142          6.9      (6.4,7.2]         3.1          5.1         2.3  virginica #> 143          5.8      (5.6,6.4]         2.7          5.1         1.9  virginica #> 144          6.8      (6.4,7.2]         3.2          5.9         2.3  virginica #> 145          6.7      (6.4,7.2]         3.3          5.7         2.5  virginica #> 146          6.7      (6.4,7.2]         3.0          5.2         2.3  virginica #> 147          6.3      (5.6,6.4]         2.5          5.0         1.9  virginica #> 148          6.5      (6.4,7.2]         3.0          5.2         2.0  virginica #> 149          6.2      (5.6,6.4]         3.4          5.4         2.3  virginica #> 150          5.9      (5.6,6.4]         3.0          5.1         1.8  virginica"},{"path":"https://inzightvit.github.io/iNZightTools/reference/inzdf.html","id":null,"dir":"Reference","previous_headings":"","what":"iNZight data frame object — inzdf","title":"iNZight data frame object — inzdf","text":"object allows data either standard R data.frame connection database.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/inzdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iNZight data frame object — inzdf","text":"","code":"inzdf(x, name, ...)  # S3 method for class 'tbl_df' inzdf(x, name, ...)  # S3 method for class 'data.frame' inzdf(x, name, ...)  # S3 method for class 'SQLiteConnection' inzdf(   x,   name = deparse(substitute(x)),   schema = NULL,   var_attrs = list(),   dictionary = NULL,   keep_con = FALSE,   ... )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/inzdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"iNZight data frame object — inzdf","text":"x data.frame db connection name name data ... additional arguments passed methods schema list specifying schema database (used linking) var_attrs nested list variables attributes table > variable dictionary inzdict object keep_con `TRUE` data remain DB (use large data)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/inzdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"iNZight data frame object — inzdf","text":"inzdf object","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/inzdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"iNZight data frame object — inzdf","text":"TODO: possible specify linking structure multiple datasets, variables selected dataset linked '--fly'. , used databases, significantly reduce size data memory.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Is factor check — is_cat","title":"Is factor check — is_cat","text":"function checks variable factor.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is factor check — is_cat","text":"","code":"is_cat(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is factor check — is_cat","text":"x variable check","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is factor check — is_cat","text":"logical, TRUE variable factor","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_cat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Is factor check — is_cat","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Is datetime check — is_dt","title":"Is datetime check — is_dt","text":"function checks variable date/time/datetime","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is datetime check — is_dt","text":"","code":"is_dt(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is datetime check — is_dt","text":"x variable check","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is datetime check — is_dt","text":"logical, TRUE variable datetime","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_dt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Is datetime check — is_dt","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Is numeric check — is_num","title":"Is numeric check — is_num","text":"function checks variable numeric, considered one. example, dates times can treated numeric, return TRUE.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is numeric check — is_num","text":"","code":"is_num(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is numeric check — is_num","text":"x variable check","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is numeric check — is_num","text":"logical, TRUE variable numeric","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_num.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Is numeric check — is_num","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Preview — is_preview","title":"Is Preview — is_preview","text":"Checks complete file read .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Preview — is_preview","text":"","code":"is_preview(df)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Preview — is_preview","text":"df data check","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Preview — is_preview","text":"logical","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is a survey object (either standard or replicate design) — is_survey","title":"Check if object is a survey object (either standard or replicate design) — is_survey","text":"Check object survey object (either standard replicate design)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is a survey object (either standard or replicate design) — is_survey","text":"","code":"is_survey(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is a survey object (either standard or replicate design) — is_survey","text":"x object tested","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is a survey object (either standard or replicate design) — is_survey","text":"logical","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_survey.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if object is a survey object (either standard or replicate design) — is_survey","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svydesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is a survey object (created by svydesign()) — is_svydesign","title":"Check if object is a survey object (created by svydesign()) — is_svydesign","text":"Check object survey object (created svydesign())","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svydesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is a survey object (created by svydesign()) — is_svydesign","text":"","code":"is_svydesign(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svydesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is a survey object (created by svydesign()) — is_svydesign","text":"x object tested","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svydesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is a survey object (created by svydesign()) — is_svydesign","text":"logical","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svydesign.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if object is a survey object (created by svydesign()) — is_svydesign","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svyrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is a replicate survey object (created by svrepdesign()) — is_svyrep","title":"Check if object is a replicate survey object (created by svrepdesign()) — is_svyrep","text":"Check object replicate survey object (created svrepdesign())","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svyrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is a replicate survey object (created by svrepdesign()) — is_svyrep","text":"","code":"is_svyrep(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svyrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is a replicate survey object (created by svrepdesign()) — is_svyrep","text":"x object tested","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svyrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is a replicate survey object (created by svrepdesign()) — is_svyrep","text":"logical","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/is_svyrep.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if object is a replicate survey object (created by svrepdesign()) — is_svyrep","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/join_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Join data with another dataset — join_data","title":"Join data with another dataset — join_data","text":"Join data another dataset","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/join_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join data with another dataset — join_data","text":"","code":"join_data(   data_l,   data_r,   by = NULL,   how = c(\"inner\", \"left\", \"right\", \"full\", \"anti\", \"semi\"),   suffix_l = \".x\",   suffix_r = \".y\" )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/join_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join data with another dataset — join_data","text":"data_l original data data_r imported dataset character vector variables join method used join datasets suffix_l suffix original dataset (ignored filter-joins) suffix_r suffix imported dataset (ignored filter-joins)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/join_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join data with another dataset — join_data","text":"joined dataset","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/join_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Join data with another dataset — join_data","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_linked.html","id":null,"dir":"Reference","previous_headings":"","what":"Import linked data into an inzdf object — load_linked","title":"Import linked data into an inzdf object — load_linked","text":"Import linked data inzdf object","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_linked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import linked data into an inzdf object — load_linked","text":"","code":"load_linked(   x,   schema,   con,   name = ifelse(missing(con), deparse(substitute(x)), deparse(substitute(con))),   keep_con = FALSE,   progress = FALSE,   ... )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_linked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import linked data into an inzdf object — load_linked","text":"x linked specification file vector data set paths schema list describing schema/relationships files con database connection load linked data name name data set collection keep_con TRUE data remain DB (use large data) progress either TRUE FALSE enable/disable default progress bar, list three functions x <- create(, ), set(x, ), destroy(x) progress bar. ... additional arguments passed data reading function smart_read()","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_linked.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import linked data into an inzdf object — load_linked","text":"inzdf object","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_rda.html","id":null,"dir":"Reference","previous_headings":"","what":"Load object(s) from an Rdata file — load_rda","title":"Load object(s) from an Rdata file — load_rda","text":"Load object(s) Rdata file","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_rda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load object(s) from an Rdata file — load_rda","text":"","code":"load_rda(file)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_rda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load object(s) from an Rdata file — load_rda","text":"file path rdata file","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_rda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load object(s) from an Rdata file — load_rda","text":"list data frames, plus code","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/load_rda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load object(s) from an Rdata file — load_rda","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/make_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Make unique variable names — make_names","title":"Make unique variable names — make_names","text":"Helper function create new variable names unique given set existing names (data set, example). variable name already exists, number appended.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/make_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make unique variable names — make_names","text":"","code":"make_names(new, existing = character())"},{"path":"https://inzightvit.github.io/iNZightTools/reference/make_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make unique variable names — make_names","text":"new vector proposed new variable names existing vector existing variable names","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/make_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make unique variable names — make_names","text":"vector unique variable names","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/make_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make unique variable names — make_names","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/make_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make unique variable names — make_names","text":"","code":"make_names(c(\"var_x\", \"var_y\"), c(\"var_x\", \"var_z\")) #> [1] \"var_x1\" \"var_y\""},{"path":"https://inzightvit.github.io/iNZightTools/reference/missing_to_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert missing values to categorical variables — missing_to_cat","title":"Convert missing values to categorical variables — missing_to_cat","text":"Turn <NA> categorical variables \"(Missing)\"; numeric variables converted categorical variables numeric values \"(Observed)\" NA \"(Missing)\".","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/missing_to_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert missing values to categorical variables — missing_to_cat","text":"","code":"missing_to_cat(data, vars, names = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/missing_to_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert missing values to categorical variables — missing_to_cat","text":"data dataframe columns convert missing values categorical vars character vector variables data conversion missing values names character vector names new variables","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/missing_to_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert missing values to categorical variables — missing_to_cat","text":"original dataframe containing new columns converted variables        missing values tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/missing_to_cat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert missing values to categorical variables — missing_to_cat","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/missing_to_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert missing values to categorical variables — missing_to_cat","text":"","code":"missing <- missing_to_cat(iris, vars = c(\"Species\", \"Sepal.Length\")) cat(code(missing)) #> iris |> dplyr::mutate(Species.miss = forcats::fct_na_value_to_level(Species,   \"(Missing)\"), .after = Species) |> dplyr::mutate(Sepal.Length.miss = factor(   dplyr::case_match(Sepal.Length, NA ~ \"(Missing)\", .default = \"(Observed)\")), .after = Sepal.Length) head(missing) #>   Sepal.Length Sepal.Length.miss Sepal.Width Petal.Length Petal.Width Species #> 1          5.1        (Observed)         3.5          1.4         0.2  setosa #> 2          4.9        (Observed)         3.0          1.4         0.2  setosa #> 3          4.7        (Observed)         3.2          1.3         0.2  setosa #> 4          4.6        (Observed)         3.1          1.5         0.2  setosa #> 5          5.0        (Observed)         3.6          1.4         0.2  setosa #> 6          5.4        (Observed)         3.9          1.7         0.4  setosa #>   Species.miss #> 1       setosa #> 2       setosa #> 3       setosa #> 4       setosa #> 5       setosa #> 6       setosa"},{"path":"https://inzightvit.github.io/iNZightTools/reference/newdevice.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a New Graphics Device — newdevice","title":"Open a New Graphics Device — newdevice","text":"Opens new graphics device","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/newdevice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a New Graphics Device — newdevice","text":"","code":"newdevice(width = 7, height = 7, ...)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/newdevice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a New Graphics Device — newdevice","text":"width width (inches) new device height height (inches) new device ... additional arguments passed new device function","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/newdevice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open a New Graphics Device — newdevice","text":"Depending system, difference devices better. windows device works fine (now), attempt speed devices going using. speed getting rid buffering.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/newdevice.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open a New Graphics Device — newdevice","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/operator_not_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Anti value matching — Not In operator","title":"Anti value matching — Not In operator","text":"Anti value matching","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/operator_not_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anti value matching — Not In operator","text":"","code":"x %notin% table"},{"path":"https://inzightvit.github.io/iNZightTools/reference/operator_not_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anti value matching — Not In operator","text":"x vector values matched table vector values match ","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/operator_not_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anti value matching — Not In operator","text":"logical vector length 'x', indicating element exist table.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/operator_or_null.html","id":null,"dir":"Reference","previous_headings":"","what":"NULL or operator — Or NULL operator","title":"NULL or operator — Or NULL operator","text":"NULL operator","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/operator_or_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NULL or operator — Or NULL operator","text":"","code":"a %||% b"},{"path":"https://inzightvit.github.io/iNZightTools/reference/operator_or_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NULL or operator — Or NULL operator","text":"object, potentially NULL b object","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/operator_or_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NULL or operator — Or NULL operator","text":"NULL, otherwise b","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://inzightvit.github.io/iNZightTools/reference/print_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-printing of the code attached to an object — print_code","title":"Tidy-printing of the code attached to an object — print_code","text":"Tidy-printing code attached object","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/print_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-printing of the code attached to an object — print_code","text":"","code":"print_code(x, ...)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/print_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-printing of the code attached to an object — print_code","text":"x dataframe code attached ... additional arguments passed tidy_all_code()","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/print_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-printing of the code attached to an object — print_code","text":"Called side-effect printing code console.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/print_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy-printing of the code attached to an object — print_code","text":"","code":"iris_agg <- aggregate_data(iris, group_vars = \"Species\", summaries = \"mean\") print_code(iris_agg) #> iris |> #>     dplyr::group_by(Species) |> #>     dplyr::summarise( #>         Sepal.Length_mean = mean(Sepal.Length, #>             na.rm = TRUE #>         ), #>         Sepal.Width_mean = mean(Sepal.Width, #>             na.rm = TRUE #>         ), #>         Petal.Length_mean = mean(Petal.Length, #>             na.rm = TRUE #>         ), #>         Petal.Width_mean = mean(Petal.Width, #>             na.rm = TRUE #>         ), #>         .groups = \"drop\" #>     ) #>"},{"path":"https://inzightvit.github.io/iNZightTools/reference/random_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Random sampling without replacement — random_sample","title":"Random sampling without replacement — random_sample","text":"Take specified number groups observations fixed group size sampling without replacement returns result along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/random_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random sampling without replacement — random_sample","text":"","code":"random_sample(data, n, sample_size)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/random_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random sampling without replacement — random_sample","text":"data dataframe sample n number groups generate sample_size size group specified n","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/random_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random sampling without replacement — random_sample","text":"dataframe containing random samples tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/random_sample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Random sampling without replacement — random_sample","text":"Owen Jin, Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/random_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random sampling without replacement — random_sample","text":"","code":"rs <- random_sample(iris, n = 5, sample_size = 3) cat(code(rs)) #> iris |> dplyr::slice_sample(n = 5 * 3) |> dplyr::mutate(.group = factor(rep(   seq_len(5), each = 3))) head(rs) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species .group #> 1          6.0         2.2          4.0         1.0 versicolor      1 #> 2          5.8         2.7          5.1         1.9  virginica      1 #> 3          6.5         3.2          5.1         2.0  virginica      1 #> 4          5.1         3.8          1.6         0.2     setosa      2 #> 5          5.0         3.6          1.4         0.2     setosa      2 #> 6          5.1         3.3          1.7         0.5     setosa      2"},{"path":"https://inzightvit.github.io/iNZightTools/reference/rank_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Rank the data of numeric variables — rank_vars","title":"Rank the data of numeric variables — rank_vars","text":"Rank values numeric variables, example, descending order, returns result along tidyverse code used generate . See row_number percent_rank.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rank_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rank the data of numeric variables — rank_vars","text":"","code":"rank_vars(data, vars, rank_type = c(\"min\", \"dense\", \"percent\"))"},{"path":"https://inzightvit.github.io/iNZightTools/reference/rank_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rank the data of numeric variables — rank_vars","text":"data dataframe variables rank vars character vector numeric variables data rank rank_type either \"min\", \"dense\" \"percent\", see row_number, percent_rank","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rank_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rank the data of numeric variables — rank_vars","text":"original dataframe containing new columns ranks         variables vars tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/rank_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rank the data of numeric variables — rank_vars","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rank_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rank the data of numeric variables — rank_vars","text":"","code":"ranked <- rank_vars(iris, vars = c(\"Sepal.Length\", \"Petal.Length\")) cat(code(ranked)) #> iris |> dplyr::mutate(Sepal.Length.min_rank = dplyr::min_rank(Sepal.Length), .after = Sepal.Length) |> dplyr::mutate(Petal.Length.min_rank = dplyr::min_rank(   Petal.Length), .after = Petal.Length) head(ranked) #>   Sepal.Length Sepal.Length.min_rank Sepal.Width Petal.Length #> 1          5.1                    33         3.5          1.4 #> 2          4.9                    17         3.0          1.4 #> 3          4.7                    10         3.2          1.3 #> 4          4.6                     6         3.1          1.5 #> 5          5.0                    23         3.6          1.4 #> 6          5.4                    47         3.9          1.7 #>   Petal.Length.min_rank Petal.Width Species #> 1                    12         0.2  setosa #> 2                    12         0.2  setosa #> 3                     5         0.2  setosa #> 4                    25         0.2  setosa #> 5                    12         0.2  setosa #> 6                    45         0.4  setosa"},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read CSV with iNZight metadata — read_meta","title":"Read CSV with iNZight metadata — read_meta","text":"function read CSV file iNZight metadata header. allows plain text CSV files supplied additional comments describe structure data make import data handling easier.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read CSV with iNZight metadata — read_meta","text":"","code":"read_meta(file, preview = FALSE, column_types, ...)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read CSV with iNZight metadata — read_meta","text":"file plain text file metadata preview logical, TRUE first 10 rows returned column_types optional column types ... arguments","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read CSV with iNZight metadata — read_meta","text":"data frame","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read CSV with iNZight metadata — read_meta","text":"main example define factor levels integer variable large data sets.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_meta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read CSV with iNZight metadata — read_meta","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Read text as data — read_text","title":"Read text as data — read_text","text":"text can also value `\"clipboard\"` use `readr::clipboard()`.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read text as data — read_text","text":"","code":"read_text(txt, delim = \"\\t\", ...)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read text as data — read_text","text":"txt character string delim delimiter use, passed `readr::read_delim()` ... additional arguments passed `readr::read_delim()`","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read text as data — read_text","text":"data.frame","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/read_text.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read text as data — read_text","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/remove_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove rows from data by row numbers — remove_rows","title":"Remove rows from data by row numbers — remove_rows","text":"function filters dataframe survey design object removing specified rows based provided row numbers. resulting filtered dataframe returned, along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/remove_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove rows from data by row numbers — remove_rows","text":"","code":"remove_rows(data, rows)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/remove_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove rows from data by row numbers — remove_rows","text":"data dataframe survey design object filtered. rows numeric vector row numbers sliced .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/remove_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove rows from data by row numbers — remove_rows","text":"filtered dataframe tidyverse code attached.","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/remove_rows.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove rows from data by row numbers — remove_rows","text":"Owen Jin, Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/remove_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove rows from data by row numbers — remove_rows","text":"","code":"data <- remove_rows(iris, rows = c(1, 4, 5)) cat(code(data)) #> dplyr::slice(iris, -(c(1, 4, 5))) head(data) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          4.9         3.0          1.4         0.2  setosa #> 2          4.7         3.2          1.3         0.2  setosa #> 3          5.4         3.9          1.7         0.4  setosa #> 4          4.6         3.4          1.4         0.3  setosa #> 5          5.0         3.4          1.5         0.2  setosa #> 6          4.4         2.9          1.4         0.2  setosa"},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename the levels of a categorical variable — rename_levels","title":"Rename the levels of a categorical variable — rename_levels","text":"Rename levels categorical variables, returns result along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename the levels of a categorical variable — rename_levels","text":"","code":"rename_levels(data, var, tobe_asis, name = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename the levels of a categorical variable — rename_levels","text":"data dataframe column renamed var character categorical variable rename tobe_asis named list old level names assigned new level names ie. list('new level names' = 'old level names') name name new variable","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename the levels of a categorical variable — rename_levels","text":"original dataframe containing new column renamed categorical         variable tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_levels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename the levels of a categorical variable — rename_levels","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename the levels of a categorical variable — rename_levels","text":"","code":"renamed <- rename_levels(iris,     var = \"Species\",     tobe_asis = list(set = \"setosa\", ver = \"versicolor\") ) cat(code(renamed)) #> iris |> dplyr::mutate(Species.renamed = forcats::fct_recode(Species, set = \"setosa\",   ver = \"versicolor\"), .after = Species) head(renamed) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species Species.renamed #> 1          5.1         3.5          1.4         0.2  setosa             set #> 2          4.9         3.0          1.4         0.2  setosa             set #> 3          4.7         3.2          1.3         0.2  setosa             set #> 4          4.6         3.1          1.5         0.2  setosa             set #> 5          5.0         3.6          1.4         0.2  setosa             set #> 6          5.4         3.9          1.7         0.4  setosa             set"},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename column names — rename_vars","title":"Rename column names — rename_vars","text":"Rename columns dataset desired names","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename column names — rename_vars","text":"","code":"rename_vars(data, tobe_asis)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename column names — rename_vars","text":"data dataframe columns rename tobe_asis named list old column names assigned new column names ie. list('new column names' = 'old column names')","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename column names — rename_vars","text":"original dataframe containing new columns renamed columns        tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename column names — rename_vars","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/rename_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename column names — rename_vars","text":"","code":"renamed <- rename_vars(iris, list(     sepal_length = \"Sepal.Length\",     sepal_width = \"Sepal.Width\",     petal_length = \"Petal.Length\",     petal_width = \"Petal.Width\" )) cat(code(renamed)) #> iris |> dplyr::rename(sepal_length = \"Sepal.Length\", sepal_width = \"Sepal.Width\",   petal_length = \"Petal.Length\", petal_width = \"Petal.Width\") head(renamed) #>   sepal_length sepal_width petal_length petal_width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa #> 4          4.6         3.1          1.5         0.2  setosa #> 5          5.0         3.6          1.4         0.2  setosa #> 6          5.4         3.9          1.7         0.4  setosa"},{"path":"https://inzightvit.github.io/iNZightTools/reference/reorder_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder the levels of a categorical variable — reorder_levels","title":"Reorder the levels of a categorical variable — reorder_levels","text":"Reorder levels categorical variable either manually automatically","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/reorder_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder the levels of a categorical variable — reorder_levels","text":"","code":"reorder_levels(   data,   var,   new_levels = NULL,   auto = c(\"freq\", \"order\", \"seq\"),   name = NULL )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/reorder_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder the levels of a categorical variable — reorder_levels","text":"data dataframe reorder var categorical variable reorder new_levels character vector new factor order; overrides auto NULL auto meaningful new_levels NULL: method auto-reorder levels, see fct_inorder name name new variable","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/reorder_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder the levels of a categorical variable — reorder_levels","text":"original dataframe containing new column reordered         categorical variable tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/reorder_levels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reorder the levels of a categorical variable — reorder_levels","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/reorder_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder the levels of a categorical variable — reorder_levels","text":"","code":"reordered <- reorder_levels(iris,     var = \"Species\",     new_levels = c(\"versicolor\", \"virginica\", \"setosa\") ) cat(code(reordered)) #> iris |> dplyr::mutate(Species.reord = factor(Species, c(\"versicolor\",   \"virginica\", \"setosa\")), .after = Species) head(reordered) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species Species.reord #> 1          5.1         3.5          1.4         0.2  setosa        setosa #> 2          4.9         3.0          1.4         0.2  setosa        setosa #> 3          4.7         3.2          1.3         0.2  setosa        setosa #> 4          4.6         3.1          1.5         0.2  setosa        setosa #> 5          5.0         3.6          1.4         0.2  setosa        setosa #> 6          5.4         3.9          1.7         0.4  setosa        setosa  reordered <- reorder_levels(iris,     var = \"Species\",     auto = \"freq\" ) cat(code(reordered)) #> iris |> dplyr::mutate(Species.reord = forcats::fct_infreq(Species), .after = Species) head(reordered) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species Species.reord #> 1          5.1         3.5          1.4         0.2  setosa        setosa #> 2          4.9         3.0          1.4         0.2  setosa        setosa #> 3          4.7         3.2          1.3         0.2  setosa        setosa #> 4          4.6         3.1          1.5         0.2  setosa        setosa #> 5          5.0         3.6          1.4         0.2  setosa        setosa #> 6          5.4         3.9          1.7         0.4  setosa        setosa"},{"path":"https://inzightvit.github.io/iNZightTools/reference/reshape_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshaping dataset from wide to long or from long to wide — reshape_data","title":"Reshaping dataset from wide to long or from long to wide — reshape_data","text":"Reshaping dataset wide long long wide","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/reshape_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshaping dataset from wide to long or from long to wide — reshape_data","text":"","code":"reshape_data(   data,   data_to = c(\"long\", \"wide\"),   cols,   names_to = \"name\",   values_to = \"value\",   names_from = \"name\",   values_from = \"value\" )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/reshape_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshaping dataset from wide to long or from long to wide — reshape_data","text":"data dataset reshape data_to whether target dataset long wide cols columns gather together (wide long) names_to name new column containing old names (wide long) values_to name new column containing old values (wide long) names_from column spread (long wide) values_from values put spread columns (long wide)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/reshape_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshaping dataset from wide to long or from long to wide — reshape_data","text":"reshaped dataset","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/reshape_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reshaping dataset from wide to long or from long to wide — reshape_data","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/save_rda.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an object with, optionally, a (valid) name — save_rda","title":"Save an object with, optionally, a (valid) name — save_rda","text":"Save object , optionally, (valid) name","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/save_rda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an object with, optionally, a (valid) name — save_rda","text":"","code":"save_rda(data, file, name)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/save_rda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an object with, optionally, a (valid) name — save_rda","text":"data data frame save file save name optional, name data rda file","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/save_rda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save an object with, optionally, a (valid) name — save_rda","text":"logical, TRUE, along code save","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/save_rda.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save an object with, optionally, a (valid) name — save_rda","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select — select","title":"Select — select","text":"Select","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/select_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables from a dataset — select_vars","title":"Select variables from a dataset — select_vars","text":"Select (reordered) subset variables subset.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/select_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables from a dataset — select_vars","text":"","code":"select_vars(data, keep)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/select_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables from a dataset — select_vars","text":"data dataset keep vector variable names keep","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/select_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select variables from a dataset — select_vars","text":"data frame tidyverse code attribute","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/select_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select variables from a dataset — select_vars","text":"Tom Elliott, Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/select_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select variables from a dataset — select_vars","text":"","code":"select_vars(iris, c(\"Sepal.Length\", \"Species\", \"Sepal.Width\")) #>     Sepal.Length    Species Sepal.Width #> 1            5.1     setosa         3.5 #> 2            4.9     setosa         3.0 #> 3            4.7     setosa         3.2 #> 4            4.6     setosa         3.1 #> 5            5.0     setosa         3.6 #> 6            5.4     setosa         3.9 #> 7            4.6     setosa         3.4 #> 8            5.0     setosa         3.4 #> 9            4.4     setosa         2.9 #> 10           4.9     setosa         3.1 #> 11           5.4     setosa         3.7 #> 12           4.8     setosa         3.4 #> 13           4.8     setosa         3.0 #> 14           4.3     setosa         3.0 #> 15           5.8     setosa         4.0 #> 16           5.7     setosa         4.4 #> 17           5.4     setosa         3.9 #> 18           5.1     setosa         3.5 #> 19           5.7     setosa         3.8 #> 20           5.1     setosa         3.8 #> 21           5.4     setosa         3.4 #> 22           5.1     setosa         3.7 #> 23           4.6     setosa         3.6 #> 24           5.1     setosa         3.3 #> 25           4.8     setosa         3.4 #> 26           5.0     setosa         3.0 #> 27           5.0     setosa         3.4 #> 28           5.2     setosa         3.5 #> 29           5.2     setosa         3.4 #> 30           4.7     setosa         3.2 #> 31           4.8     setosa         3.1 #> 32           5.4     setosa         3.4 #> 33           5.2     setosa         4.1 #> 34           5.5     setosa         4.2 #> 35           4.9     setosa         3.1 #> 36           5.0     setosa         3.2 #> 37           5.5     setosa         3.5 #> 38           4.9     setosa         3.6 #> 39           4.4     setosa         3.0 #> 40           5.1     setosa         3.4 #> 41           5.0     setosa         3.5 #> 42           4.5     setosa         2.3 #> 43           4.4     setosa         3.2 #> 44           5.0     setosa         3.5 #> 45           5.1     setosa         3.8 #> 46           4.8     setosa         3.0 #> 47           5.1     setosa         3.8 #> 48           4.6     setosa         3.2 #> 49           5.3     setosa         3.7 #> 50           5.0     setosa         3.3 #> 51           7.0 versicolor         3.2 #> 52           6.4 versicolor         3.2 #> 53           6.9 versicolor         3.1 #> 54           5.5 versicolor         2.3 #> 55           6.5 versicolor         2.8 #> 56           5.7 versicolor         2.8 #> 57           6.3 versicolor         3.3 #> 58           4.9 versicolor         2.4 #> 59           6.6 versicolor         2.9 #> 60           5.2 versicolor         2.7 #> 61           5.0 versicolor         2.0 #> 62           5.9 versicolor         3.0 #> 63           6.0 versicolor         2.2 #> 64           6.1 versicolor         2.9 #> 65           5.6 versicolor         2.9 #> 66           6.7 versicolor         3.1 #> 67           5.6 versicolor         3.0 #> 68           5.8 versicolor         2.7 #> 69           6.2 versicolor         2.2 #> 70           5.6 versicolor         2.5 #> 71           5.9 versicolor         3.2 #> 72           6.1 versicolor         2.8 #> 73           6.3 versicolor         2.5 #> 74           6.1 versicolor         2.8 #> 75           6.4 versicolor         2.9 #> 76           6.6 versicolor         3.0 #> 77           6.8 versicolor         2.8 #> 78           6.7 versicolor         3.0 #> 79           6.0 versicolor         2.9 #> 80           5.7 versicolor         2.6 #> 81           5.5 versicolor         2.4 #> 82           5.5 versicolor         2.4 #> 83           5.8 versicolor         2.7 #> 84           6.0 versicolor         2.7 #> 85           5.4 versicolor         3.0 #> 86           6.0 versicolor         3.4 #> 87           6.7 versicolor         3.1 #> 88           6.3 versicolor         2.3 #> 89           5.6 versicolor         3.0 #> 90           5.5 versicolor         2.5 #> 91           5.5 versicolor         2.6 #> 92           6.1 versicolor         3.0 #> 93           5.8 versicolor         2.6 #> 94           5.0 versicolor         2.3 #> 95           5.6 versicolor         2.7 #> 96           5.7 versicolor         3.0 #> 97           5.7 versicolor         2.9 #> 98           6.2 versicolor         2.9 #> 99           5.1 versicolor         2.5 #> 100          5.7 versicolor         2.8 #> 101          6.3  virginica         3.3 #> 102          5.8  virginica         2.7 #> 103          7.1  virginica         3.0 #> 104          6.3  virginica         2.9 #> 105          6.5  virginica         3.0 #> 106          7.6  virginica         3.0 #> 107          4.9  virginica         2.5 #> 108          7.3  virginica         2.9 #> 109          6.7  virginica         2.5 #> 110          7.2  virginica         3.6 #> 111          6.5  virginica         3.2 #> 112          6.4  virginica         2.7 #> 113          6.8  virginica         3.0 #> 114          5.7  virginica         2.5 #> 115          5.8  virginica         2.8 #> 116          6.4  virginica         3.2 #> 117          6.5  virginica         3.0 #> 118          7.7  virginica         3.8 #> 119          7.7  virginica         2.6 #> 120          6.0  virginica         2.2 #> 121          6.9  virginica         3.2 #> 122          5.6  virginica         2.8 #> 123          7.7  virginica         2.8 #> 124          6.3  virginica         2.7 #> 125          6.7  virginica         3.3 #> 126          7.2  virginica         3.2 #> 127          6.2  virginica         2.8 #> 128          6.1  virginica         3.0 #> 129          6.4  virginica         2.8 #> 130          7.2  virginica         3.0 #> 131          7.4  virginica         2.8 #> 132          7.9  virginica         3.8 #> 133          6.4  virginica         2.8 #> 134          6.3  virginica         2.8 #> 135          6.1  virginica         2.6 #> 136          7.7  virginica         3.0 #> 137          6.3  virginica         3.4 #> 138          6.4  virginica         3.1 #> 139          6.0  virginica         3.0 #> 140          6.9  virginica         3.1 #> 141          6.7  virginica         3.1 #> 142          6.9  virginica         3.1 #> 143          5.8  virginica         2.7 #> 144          6.8  virginica         3.2 #> 145          6.7  virginica         3.3 #> 146          6.7  virginica         3.0 #> 147          6.3  virginica         2.5 #> 148          6.5  virginica         3.0 #> 149          6.2  virginica         3.4 #> 150          5.9  virginica         3.0"},{"path":"https://inzightvit.github.io/iNZightTools/reference/separate_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate columns — separate_var","title":"Separate columns — separate_var","text":"Separate columns","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/separate_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate columns — separate_var","text":"","code":"separate_var(data, var, by, names, into = c(\"cols\", \"rows\"))"},{"path":"https://inzightvit.github.io/iNZightTools/reference/separate_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate columns — separate_var","text":"data dataset var name variable separated string delimiter values (separate delimiter) integer(s) number characters split (separate position), length 1 unless integer = \"cols\"; non-integer numeric vector values rounded nearest integer names = \"cols\", character vector output column names; use NA components want appear output; number non-NA elements determines number new columns result whether split new rows columns","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/separate_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate columns — separate_var","text":"Separated dataset","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/separate_var.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Separate columns — separate_var","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"List available sheets within a file — sheets","title":"List available sheets within a file — sheets","text":"Useful reading Excel file quickly check sheets available.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available sheets within a file — sheets","text":"","code":"sheets(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available sheets within a file — sheets","text":"x dataframe, presumably returned smart_read","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sheets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available sheets within a file — sheets","text":"vector sheet names, NULL file Excel workbook","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sheets.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List available sheets within a file — sheets","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sheets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available sheets within a file — sheets","text":"","code":"cas_file <- system.file(\"extdata/cas500.xls\", package = \"iNZightTools\") cas <- smart_read(cas_file) #> Warning: There were 5 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `rightfoot = .Primitive(\"as.double\")(rightfoot)`. #> Caused by warning: #> ! NAs introduced by coercion #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 4 remaining warnings. sheets(cas) #> [1] \"Census at School-500\""},{"path":"https://inzightvit.github.io/iNZightTools/reference/smart_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a data file — smart_read","title":"Read a data file — smart_read","text":"simple function imports file without users needing specify information file type (see Details ). smart_read() function uses file's extension determine appropriate function read data. Additionally, characters converted factors default, mostly compatibility iNZight (https://inzight.nz).","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/smart_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a data file — smart_read","text":"","code":"smart_read(   file,   ext = tools::file_ext(file),   preview = FALSE,   column_types = NULL,   ... )"},{"path":"https://inzightvit.github.io/iNZightTools/reference/smart_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a data file — smart_read","text":"file file path read ext file extension, namely \"csv\" \"txt\" preview logical, TRUE first rows data returned column_types vector column types (see ?readr::read_csv) ... additional parameters passed read_* functions","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/smart_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a data file — smart_read","text":"dataframe additional attributes: name name file code contains 'tidyverse' code used read data sheets contains names sheets 'file' Excel file (can retrieved using sheets() helper function)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/smart_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a data file — smart_read","text":"Currently, smart_read() understands following file types: delimited (.csv, .txt) Excel (.xls, .xlsx) SPSS (.sav) Stata (.dta) SAS (.sas7bdat, .xpt) R data (.rds) JSON (.json)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/smart_read.html","id":"reading-delimited-files","dir":"Reference","previous_headings":"","what":"Reading delimited files","title":"Read a data file — smart_read","text":"default, smart_read() detect delimiter used file argument delimiter = NULL passed (default). work, can override argument:","code":"smart_read('path/to/file', delimiter = '+')"},{"path":"https://inzightvit.github.io/iNZightTools/reference/smart_read.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read a data file — smart_read","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sort_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort data by variables — sort_vars","title":"Sort data by variables — sort_vars","text":"Sorts dataframe one variables, returns result along tidyverse code used generate .","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sort_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort data by variables — sort_vars","text":"","code":"sort_vars(data, vars, asc = rep(TRUE, length(vars)))"},{"path":"https://inzightvit.github.io/iNZightTools/reference/sort_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort data by variables — sort_vars","text":"data dataframe sort vars character vector variable names sort asc logical, length 1 length vars. TRUE (default), sorted ascending order, otherwise descending.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sort_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort data by variables — sort_vars","text":"data tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/sort_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sort data by variables — sort_vars","text":"Owen Jin, Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/sort_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort data by variables — sort_vars","text":"","code":"sorted <- sort_vars(iris,     vars = c(\"Sepal.Width\", \"Sepal.Length\"),     asc = c(TRUE, FALSE) ) cat(code(sorted)) #> iris |> dplyr::arrange(Sepal.Width, desc(Sepal.Length)) head(sorted) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1          5.0         2.0          3.5         1.0 versicolor #> 2          6.2         2.2          4.5         1.5 versicolor #> 3          6.0         2.2          4.0         1.0 versicolor #> 4          6.0         2.2          5.0         1.5  virginica #> 5          6.3         2.3          4.4         1.3 versicolor #> 6          5.5         2.3          4.0         1.3 versicolor"},{"path":"https://inzightvit.github.io/iNZightTools/reference/standardize_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize the data of a numeric variable — standardize_vars","title":"Standardize the data of a numeric variable — standardize_vars","text":"Centre divide standard error values numeric variable","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/standardize_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize the data of a numeric variable — standardize_vars","text":"","code":"standardize_vars(data, vars, names = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/standardize_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize the data of a numeric variable — standardize_vars","text":"data dataframe columns standardize vars character vector numeric variables data standardize names names created variables","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/standardize_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize the data of a numeric variable — standardize_vars","text":"original dataframe containing new columns standardized         variables tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/standardize_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardize the data of a numeric variable — standardize_vars","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/standardize_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize the data of a numeric variable — standardize_vars","text":"","code":"standardized <- standardize_vars(iris, var = c(\"Sepal.Width\", \"Petal.Width\")) cat(code(standardized)) #> iris |> dplyr::mutate(Sepal.Width.std = scale(Sepal.Width)[, 1], .after = Sepal.Width) |>   dplyr::mutate(Petal.Width.std = scale(Petal.Width)[, 1], .after = Petal.Width) head(standardized) #>   Sepal.Length Sepal.Width Sepal.Width.std Petal.Length Petal.Width #> 1          5.1         3.5      1.01560199          1.4         0.2 #> 2          4.9         3.0     -0.13153881          1.4         0.2 #> 3          4.7         3.2      0.32731751          1.3         0.2 #> 4          4.6         3.1      0.09788935          1.5         0.2 #> 5          5.0         3.6      1.24503015          1.4         0.2 #> 6          5.4         3.9      1.93331463          1.7         0.4 #>   Petal.Width.std Species #> 1       -1.311052  setosa #> 2       -1.311052  setosa #> 3       -1.311052  setosa #> 4       -1.311052  setosa #> 5       -1.311052  setosa #> 6       -1.048667  setosa"},{"path":"https://inzightvit.github.io/iNZightTools/reference/stringConcatenation.html","id":null,"dir":"Reference","previous_headings":"","what":"str_c operator — str_c","title":"str_c operator — str_c","text":"str_c operator","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/survey_IQR.html","id":null,"dir":"Reference","previous_headings":"","what":"Interquartile range function for surveys — survey_IQR","title":"Interquartile range function for surveys — survey_IQR","text":"Calculates interquartile range complex survey data. wrapper taking differences svyquantile 0.25 0.75 quantiles, meant called within srvyr::summarise.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/survey_IQR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interquartile range function for surveys — survey_IQR","text":"","code":"survey_IQR(x, na.rm = TRUE)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/survey_IQR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interquartile range function for surveys — survey_IQR","text":"x variable expression na.rm logical, TRUE missing values removed","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/survey_IQR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interquartile range function for surveys — survey_IQR","text":"vector interquartile ranges","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/survey_IQR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interquartile range function for surveys — survey_IQR","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/survey_IQR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interquartile range function for surveys — survey_IQR","text":"","code":"library(survey) library(srvyr) #>  #> Attaching package: ‘srvyr’ #> The following object is masked from ‘package:stats’: #>  #>     filter data(api)  dstrata <- apistrat %>%     as_survey(strata = stype, weights = pw)  dstrata %>%     summarise(api99_iqr = survey_IQR(api99)) #> # A tibble: 1 × 1 #>   api99_iqr #>       <dbl> #> 1       202"},{"path":"https://inzightvit.github.io/iNZightTools/reference/tidy_all_code.html","id":null,"dir":"Reference","previous_headings":"","what":"iNZight Tidy Code — tidy_all_code","title":"iNZight Tidy Code — tidy_all_code","text":"Tidy code correct indents limit code specific width","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/tidy_all_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iNZight Tidy Code — tidy_all_code","text":"","code":"tidy_all_code(x, width = 80, indent = 4, outfile, incl_library = TRUE)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/tidy_all_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"iNZight Tidy Code — tidy_all_code","text":"x character string file name file containing messy code width width line indent many spaces one indent outfile file name file containing formatted code incl_library logical, true, output code contain library name","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/tidy_all_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"iNZight Tidy Code — tidy_all_code","text":"formatted code, optionally written `outfile`","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/tidy_all_code.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"iNZight Tidy Code — tidy_all_code","text":"Tom Elliott, Lushi Cai","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/transform_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data of numeric variables — transform_vars","title":"Transform data of numeric variables — transform_vars","text":"Transform values numeric variables applying mathematical function","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/transform_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data of numeric variables — transform_vars","text":"","code":"transform_vars(data, vars, fn, names = NULL)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/transform_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data of numeric variables — transform_vars","text":"data dataframe variables transform vars character numeric variables data transform fn name (string) valid R function names names new variables","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/transform_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform data of numeric variables — transform_vars","text":"original dataframe containing new columns transformed         variable tidyverse code attached","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/reference/transform_vars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform data of numeric variables — transform_vars","text":"Zhaoming Su","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/transform_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform data of numeric variables — transform_vars","text":"","code":"transformed <- transform_vars(iris,     var = \"Petal.Length\",     fn = \"log\" ) cat(code(transformed)) #> iris |> dplyr::mutate(log.Petal.Length = log(Petal.Length), .after = Petal.Length) head(transformed) #>   Sepal.Length Sepal.Width Petal.Length log.Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4        0.3364722         0.2  setosa #> 2          4.9         3.0          1.4        0.3364722         0.2  setosa #> 3          4.7         3.2          1.3        0.2623643         0.2  setosa #> 4          4.6         3.1          1.5        0.4054651         0.2  setosa #> 5          5.0         3.6          1.4        0.3364722         0.2  setosa #> 6          5.4         3.9          1.7        0.5306283         0.4  setosa"},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Details of Validation Rule Results — validation_details","title":"Details of Validation Rule Results — validation_details","text":"Generates detailed text required details section iNZValidateWin.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Details of Validation Rule Results — validation_details","text":"","code":"validation_details(cf, v, var, id.var, df)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Details of Validation Rule Results — validation_details","text":"cf Confrontation object validate::confront() v Validator generated cf var Rule name give details id.var Variable name denoting unique identifier observation df dataset confronted","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Details of Validation Rule Results — validation_details","text":"character vector giving line summary detail text","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_details.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Details of Validation Rule Results — validation_details","text":"Daniel Barnett","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation Confrontation Summary — validation_summary","title":"Validation Confrontation Summary — validation_summary","text":"Generates summary confrontation gives basic information validation rule tested.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation Confrontation Summary — validation_summary","text":"","code":"validation_summary(cf)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation Confrontation Summary — validation_summary","text":"cf Confrontation object validate::confront()","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation Confrontation Summary — validation_summary","text":"data.frame number tests performed, number passes, number failures, failure percentage validation rule.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/validation_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Validation Confrontation Summary — validation_summary","text":"Daniel Barnett","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartype.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable type name — vartype","title":"Get variable type name — vartype","text":"Get variable type name","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable type name — vartype","text":"","code":"vartype(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable type name — vartype","text":"x vector examined","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable type name — vartype","text":"character vector variable's type","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartype.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get variable type name — vartype","text":"Tom Elliott","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all variable types from data object — vartypes","title":"Get all variable types from data object — vartypes","text":"Get variable types data object","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all variable types from data object — vartypes","text":"","code":"vartypes(x)"},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all variable types from data object — vartypes","text":"x data object (data.frame inzdf)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/reference/vartypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all variable types from data object — vartypes","text":"named vector variable types","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-201","dir":"Changelog","previous_headings":"","what":"iNZightTools 2.0.1","title":"iNZightTools 2.0.1","text":"CRAN release: 2023-10-12 Fix issue NULL values passed interpolate() triggering error","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"breaking-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"iNZightTools 2.0.0","text":"major code rework data-wrangling variable manipulation functions tidyverse libraries development conventions renamed data-wrangling variable manipulation functions functionality name-intuitive (see )","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"minor-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"iNZightTools 2.0.0","text":"Default code generated data data-wrangling variable manipulation functions now uses native R pipe |>. option added use magrittr pipe %>% instead. code() accessor function now returns string class inzcode print method formats code nicely.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"new-features-2-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"iNZightTools 2.0.0","text":"renamed aggregatedt() aggregate_dt() aggregate_dt() now wrapper aggregate_data() date component extraction aggregation functionality built , added option allow aggregation additional variables combined unite() combineCatVars() combine_vars() added options remove empty factor combinations turn missing values explicit factor level combined reshape_data() stackVars() reshape_data() reworked arguments renamed rankVars() rank_vars() included ranking methods (integer ranking density percentage ranking) renamed reorderLevels() reorder_levels included auto-reordering methods (first appearance numeric order) added option specify time zone convert_to_datetime() renamed joindata() join_data(), included right-join method, reworked arguments pull %||% operator ‘iNZight’","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"other-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"iNZightTools 2.0.0","text":"renamed aggregateData() aggregate_data() renamed appendrows() append_rows() renamed collapseLevels() collapse_cat() renamed convertToCat() convert_to_cat() renamed createNewVar() create_vars() renamed deleteVars() delete_vars() renamed extract_part() extract_dt_comp() renamed filterLevels() filter_cat() renamed filterNumeric() filter_num() renamed filterRandom() random_sample() renamed filterRows() remove_rows() renamed missingToCat() missing_to_cat() renamed renameLevels() rename_levels() renamed renameVars() rename_vars() renamed selectVars() select_vars() renamed separate() separate_var() renamed sortVars() sort_vars() renamed standardizeVars() standardize_vars() renamed transformVar() transform_vars() removed countMissing()","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1134","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.13.4","title":"iNZightTools 1.13.4","text":"read_text() function handles invalid characters (smart_read() ) read_text() applies string factor conversion","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1133","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.13.3","title":"iNZightTools 1.13.3","text":"read_text() function replaces spaces underscores column names","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1132","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.13.2","title":"iNZightTools 1.13.2","text":"add global options set/override default comment character (allow Lite change default without changing package’s default behaviour; default set # load time)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1130","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.13.0","title":"iNZightTools 1.13.0","text":"CRAN release: 2023-01-26","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"new-features-1-13-0","dir":"Changelog","previous_headings":"","what":"New features","title":"iNZightTools 1.13.0","text":"Data dictionaries Users can now import data dictionary apply dataset. apply text labels numerically coded variables set labels variables human-friendly names. Linked data New functions load linked datasets .inzlnk file, file linkage specified. Optionally users can include data dictionary file, also applied data.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"other-changes-1-13-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"iNZightTools 1.13.0","text":"relocate survey specification reading files new package surveyspec add survival analysis option fitModel via family = \"cox\" initial implementation (basic) database connectivity - early alpha stage various bug fixes/changes fix issues occuring column names spaces (CSV) (#200)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1123","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.12.3","title":"iNZightTools 1.12.3","text":"CRAN release: 2022-08-22 allow ‘readr’ use automatic delimiter guessing (csv files) instead forcing , (#187) fix Windows bug url_to_temp() adding extra lines, causing importing files one line comments fail delimiter-guessing fix bug extension guess failed file extension lower case (e.g., file.CSV) fix bug converting times missing seconds (e.g., ‘08:30’) read_dictionary() apply_dictionary() functions import data dictionary rectangular data file apply dataset","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1122","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.12.2","title":"iNZightTools 1.12.2","text":"CRAN release: 2022-01-18 add new function print_code() extract, tidy, print code attached object allow one character ‘sep’ argument combineCatVars()","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1121","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.12.1","title":"iNZightTools 1.12.1","text":"CRAN release: 2021-11-04 fix bug smart_read() parsing column types (numeric -> categorical) failed NAs column fix test failing new version survey (2.4)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1120","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.12.0","title":"iNZightTools 1.12.0","text":"CRAN release: 2021-09-17 multiple-response variables (using @multi) numeric na codes (using @numeric x na=99) allow spaces new factor level names (renameLevels()) add additional time formats extract_part() add as_survey() method inzsvyspec objects (#178) drops support R 3.6 due lack RCurl binaries prevent showing col types read_text() pass lazy = FALSE readr::read_delim() prevent lazy loading data handle missing ‘reptype’ argument survey specification file (defaults ‘BRR’, survey::svrepdesign() default)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1114","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.11.4","title":"iNZightTools 1.11.4","text":"fix bug aggregateData() summary_vars specified factor columns dataset showing vars","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1113","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.11.3","title":"iNZightTools 1.11.3","text":"fix form_class_intervals work survey designs (count yet working) remove accents/special chars factor levels parsing metadata (due Windows encoding issues)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1112","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.11.2","title":"iNZightTools 1.11.2","text":"CRAN release: 2021-07-13 prevents tests failing CRAN checks resources unavailable","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-1111","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.11.1","title":"iNZightTools 1.11.1","text":"CRAN release: 2021-06-30 update survey_IQR (tests) work ‘survey’ 4.1 (new svyquantile function)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-111","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.11","title":"iNZightTools 1.11","text":"aggregateData(), filterNumeric(), filterLevels(), filterRows(), … remove redundant code filterLevels() make concise (using droplevels()) add method convert survey design-like objects iNZight’s inzsvyspec format suppress printing dataset joining data fix bug special characters levels collapseLevels() cause error add new form_class_intervals() function update import_survey() handle URL data argument fix bug reorderLevels(..., freq = TRUE) (#165, @tmelliott)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-110","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.10","title":"iNZightTools 1.10","text":"CRAN release: 2020-12-14 refactor aggregateData function improve flexibility new import_survey() function importing survey design (data) specification file (TOML format)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-191","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.9.1","title":"iNZightTools 1.9.1","text":"fix bug reading delim files , first 1000+ rows column NA, column read logical instead character (fixed behaviour readr, overridden)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-190","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.9.0","title":"iNZightTools 1.9.0","text":"CRAN release: 2020-07-29 Minor version bump align release iNZight 4.0. add functions reading survey design file (applying dataset) add support reading JSON files add new selectVars function add negative binomial option family fitModel add %notin% operator easily/readably check ! x %% y fitModel can now fit Cox PH models","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-186","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.8.6","title":"iNZightTools 1.8.6","text":"ensure non-numeric values returned factors read_text()","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-185","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.8.5","title":"iNZightTools 1.8.5","text":"CRAN release: 2020-05-20 increase nmax previews 100 (10) use forcats::fct_cross() optional argument keep_empty","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-184","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.8.4","title":"iNZightTools 1.8.4","text":"fix handling special characters column names (spaces replaces underscores, others replaced period (.)) create make_names() function (previously ‘iNZight’) create unique new variable names columns data.frame","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-183","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.8.3","title":"iNZightTools 1.8.3","text":"CRAN release: 2020-02-23 new add_suffix() function smartly add suffixes object names append counter suffix already present edit package description meet CRAN standards","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-182","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.8.2","title":"iNZightTools 1.8.2","text":"fix issues CRAN submission","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-181","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.8.1","title":"iNZightTools 1.8.1","text":"new read_text() function read text string/clipboard smart_read() now supports URLs downloading temporary file, name Extract datetime longer includes space 2010M01, etc. works correctly iNZightTS Reshape (wide long) returns factor work rest iNZight","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-18","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.8","title":"iNZightTools 1.8","text":"Release date: 11 November 2019 ensure column_types argument respected col types specified, pass col_types = cols() suppress col spec messages new load_rda() function loads data frames rda file list new save_rda()) function allows saving data set file, optionally different name (.e., actual object name can changed) smart_read() now handles RDS files add attribute preview excel containing names available sheets","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-174","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.7.4","title":"iNZightTools 1.7.4","text":"Release date: 2 September 2019 fix bug collapsing “numeric” factor giving error fix bug reordering factor twice","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-173","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.7.3","title":"iNZightTools 1.7.3","text":"Release date: 26 August 2019 fixes bug factor order specified metadata wasn’t respected fix bug preventing first row metadata comments read description missing","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-172","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.7.2","title":"iNZightTools 1.7.2","text":"Release date: 15 July 2019 various bug fixes","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-171","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.7.1","title":"iNZightTools 1.7.1","text":"Release date: 30 April 2019 add appveyor ci add code tidying functionality import SAS files (.sas7bdat .xpt) validate datasets join data using *_join() join data rows reshape data long wide, vice versa convert characters factors (iNZight things) respect numerical order factor conversions","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-163","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.6.3","title":"iNZightTools 1.6.3","text":"Release date: 15 November 2018 [fix] prefix survey:: namespace function calls","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-162","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.6.2","title":"iNZightTools 1.6.2","text":"Release date: 10 September 2018 fix bug reading csv files spaces header","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-161","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.6.1","title":"iNZightTools 1.6.1","text":"Release date: 04 September 2018 fix bug reading metadata non-meta comments cancel read","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"inzighttools-16","dir":"Changelog","previous_headings":"","what":"iNZightTools 1.6","title":"iNZightTools 1.6","text":"Release date: 14 August 2018","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"breaking-changes-1-6","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"iNZightTools 1.6","text":"data import now performed smart_read() function","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"minor-changes-and-fixes-1-6","dir":"Changelog","previous_headings":"","what":"Minor Changes and Fixes","title":"iNZightTools 1.6","text":"new function generate R variable names (code writing) various bug fixes","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"version-15","dir":"Changelog","previous_headings":"","what":"Version 1.5","title":"Version 1.5","text":"Release date: 23 January 2018","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"tidyverse-and-code-writing-1-5","dir":"Changelog","previous_headings":"","what":"Tidyverse and Code Writing","title":"Version 1.5","text":"data manipulation functions rewritten using tidyverse functions/workflow functions written code generated evaluated, allowing code history obtained","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"patch---1-5","dir":"Changelog","previous_headings":"Patches","what":"Patch 1.5.1 - 21/02/2018","title":"Version 1.5","text":"fix tiny bug encoding default prevented non-UTF-8 files reading","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"patch---1-5-1","dir":"Changelog","previous_headings":"Patches","what":"Patch 1.5.2 - 22/02/2018","title":"Version 1.5","text":"fix bug timezone NA macs prevented reading data","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"patch---1-5-2","dir":"Changelog","previous_headings":"Patches","what":"Patch 1.5.3 - 12/03/2018","title":"Version 1.5","text":"fix bug csv reading macos","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"version-14","dir":"Changelog","previous_headings":"","what":"Version 1.4","title":"Version 1.4","text":"Release date: 25 August 2017 Code history features: interpolate code Re-document package; pass CRAN checks start converting data modification functions tidyverse","code":""},{"path":[]},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"version-1-4","dir":"Changelog","previous_headings":"Patches","what":"Version 1.4-1, 02/10/2017","title":"Version 1.4","text":"fixes pass CRAN checks","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"version-13","dir":"Changelog","previous_headings":"","what":"Version 1.3","title":"Version 1.3","text":"Release date: 23 March 2017 NEW import data function, well support metadata top text files Various bug fixes","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"version-12","dir":"Changelog","previous_headings":"","what":"Version 1.2","title":"Version 1.2","text":"Release date: 5 September, 2016 New device function uses cairo device Linux","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"patch---february-1-2","dir":"Changelog","previous_headings":"","what":"Patch 1.2.1 - 3 February, 2017","title":"Version 1.2","text":"use Acinonyx package Mac (crashes R Linux)","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"patch---february-1-2-1","dir":"Changelog","previous_headings":"","what":"Patch 1.2.2 - 18 February, 2017","title":"Version 1.2","text":"Stop using type = \"nbcairo\" macOS fallback newdevice()","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"version-11","dir":"Changelog","previous_headings":"","what":"Version 1.1","title":"Version 1.1","text":"Directly access svydesign function. Temporary fix package gets significant revamp.","code":""},{"path":"https://inzightvit.github.io/iNZightTools/news/index.html","id":"version-10","dir":"Changelog","previous_headings":"","what":"Version 1.0","title":"Version 1.0","text":"Initial release.","code":""}]
